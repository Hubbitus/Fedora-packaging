diff -NurEbBH -x bin -x CMakeCache.txt -x CMakeCache.txt.orig -x CMakeOutput.log -x CMakeCXXCompiler.cmake -x configurations.xml -x Package-Default.bash -x '*.includes' -x build.make -x flags.make -x link.txt -x '*.o' -x nbproject -x Progress -x cmake_install.cmake -x rorconfig.dir -x RoR.dir -x CMakeCache.txtr rigsofrods-source-0.4.0.4.orig/source/angelscript_addons/scriptstdstring/scriptstdstring.cpp rigsofrods-source-0.4.0.4/source/angelscript_addons/scriptstdstring/scriptstdstring.cpp
--- rigsofrods-source-0.4.0.4.orig/source/angelscript_addons/scriptstdstring/scriptstdstring.cpp	2012-09-06 13:04:24.000000000 +0400
+++ rigsofrods-source-0.4.0.4/source/angelscript_addons/scriptstdstring/scriptstdstring.cpp	2012-11-19 18:59:02.829757806 +0400
@@ -703,7 +703,7 @@
 	r = engine->RegisterObjectMethod("string", "string &opAssign(const string &in)", asMETHODPR(string, operator =, (const string&), string&), asCALL_THISCALL); assert( r >= 0 );
 	r = engine->RegisterObjectMethod("string", "string &opAddAssign(const string &in)", asMETHODPR(string, operator+=, (const string&), string&), asCALL_THISCALL); assert( r >= 0 );
 
-	r = engine->RegisterObjectMethod("string", "bool opEquals(const string &in) const", asFUNCTIONPR(operator ==, (const string &, const string &), bool), asCALL_CDECL_OBJFIRST); assert( r >= 0 );
+//	r = engine->RegisterObjectMethod("string", "bool opEquals(const string &in) const", asFUNCTIONPR(operator ==, (const string &, const string &), bool), asCALL_CDECL_OBJFIRST); assert( r >= 0 );
 	r = engine->RegisterObjectMethod("string", "int opCmp(const string &in) const", asFUNCTION(StringCmp), asCALL_CDECL_OBJFIRST); assert( r >= 0 );
 	r = engine->RegisterObjectMethod("string", "string opAdd(const string &in) const", asFUNCTIONPR(operator +, (const string &, const string &), string), asCALL_CDECL_OBJFIRST); assert( r >= 0 );
 
diff -NurEbBH -x bin -x CMakeCache.txt -x CMakeCache.txt.orig -x CMakeOutput.log -x CMakeCXXCompiler.cmake -x configurations.xml -x Package-Default.bash -x '*.includes' -x build.make -x flags.make -x link.txt -x '*.o' -x nbproject -x Progress -x cmake_install.cmake -x rorconfig.dir -x RoR.dir -x CMakeCache.txtr rigsofrods-source-0.4.0.4.orig/source/angelscript_addons/scriptstring/scriptstring.cpp rigsofrods-source-0.4.0.4/source/angelscript_addons/scriptstring/scriptstring.cpp
--- rigsofrods-source-0.4.0.4.orig/source/angelscript_addons/scriptstring/scriptstring.cpp	2012-09-06 13:04:24.000000000 +0400
+++ rigsofrods-source-0.4.0.4/source/angelscript_addons/scriptstring/scriptstring.cpp	2012-11-19 18:59:18.997023816 +0400
@@ -723,7 +723,7 @@
 	// otherwise the library will not allow the use of object handles for this type
 	r = engine->RegisterStringFactory("string@", asFUNCTION(StringFactory), asCALL_CDECL); assert( r >= 0 );
 
-	r = engine->RegisterObjectMethod("string", "bool opEquals(const string &in) const", asFUNCTIONPR(operator ==, (const string &, const string &), bool), asCALL_CDECL_OBJFIRST); assert( r >= 0 );
+//	r = engine->RegisterObjectMethod("string", "bool opEquals(const string &in) const", asFUNCTIONPR(operator ==, (const string &, const string &), bool), asCALL_CDECL_OBJFIRST); assert( r >= 0 );
 	r = engine->RegisterObjectMethod("string", "int opCmp(const string &in) const", asFUNCTION(StringCmp), asCALL_CDECL_OBJFIRST); assert( r >= 0 );
 	r = engine->RegisterObjectMethod("string", "string@ opAdd(const string &in) const", asFUNCTIONPR(operator +, (const CScriptString &, const CScriptString &), CScriptString*), asCALL_CDECL_OBJFIRST); assert( r >= 0 );
 
